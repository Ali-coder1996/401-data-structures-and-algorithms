/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stack.and.queue;

import java.util.ArrayList;
import java.util.List;

public class App {

    public static <T> void main(String[] args) {
        Stack<Integer> stack=new Stack<>();
//        stack.push(5);
//        stack.push(4);
//        stack.push(3);
        T value = stack.pop();
        T peekValue = stack.peek();
        System.out.println(value);
//        System.out.println(peekValue);
//        System.out.println(stack.toString());

        //add queue method
        Queue<Integer> queue =new Queue<>();
        queue.enqueue(8);
        queue.enqueue(5);
        queue.enqueue(53);
        T valueOfDeQueue=queue.deQueue();
        System.out.println(valueOfDeQueue);
        System.out.println(queue.toString());

        //
        PseudoQueue pseudoQueue =new PseudoQueue();
        pseudoQueue.enqueue(3);
        pseudoQueue.enqueue(4);
        pseudoQueue.enqueue(5);
        T pseValue= (T) pseudoQueue.dequeue();
        System.out.println(pseValue);
        System.out.println(pseudoQueue.toString());

        //
        Cats cat = new Cats("Mew",2.4,"anything","anything");
        Dogs dog = new Dogs("anything",2.5,"anything","anything");
        AnimalShelter animalShelter = new AnimalShelter();
        animalShelter.enqueue(cat);
        animalShelter.enqueue(dog);
        animalShelter.dequeue("cat");
//        animalShelter.dequeue("dog");
        System.out.println(animalShelter);

        //
        ValidateBrackets validateBrackets=new ValidateBrackets();
        boolean test =validateBrackets.validateBrackets("()[[Extra Characters]]");
        boolean test1 =validateBrackets.validateBrackets("{}{Code[}[Fellows](())");
        System.out.println(test);
        System.out.println(test1);

        //
        List<String> duck=new ArrayList<>();
        duck.add("A");
        duck.add("B");
        duck.add("C");
        duck.add("D");
        duck.add("E");
        DuckDuckGoose duckDuckGoose = new DuckDuckGoose();
        duckDuckGoose.duckDuckGoosed(duck,3);

    }
}
